definitions:
  ApiError-array_api_errors_ValidationError:
    properties:
      error:
        items:
          $ref: '#/definitions/api_errors.ValidationError'
        type: array
      message:
        type: string
    required:
    - message
    type: object
  ApiError-string:
    properties:
      error:
        type: string
      message:
        type: string
    required:
    - message
    type: object
  Data-user_CUser:
    properties:
      data:
        $ref: '#/definitions/user.CUser'
    required:
    - data
    type: object
  Data-user_GetUserResponse:
    properties:
      data:
        $ref: '#/definitions/user.GetUserResponse'
    required:
    - data
    type: object
  DataCount-user_GetUserResponse:
    properties:
      count:
        type: integer
      data:
        items:
          $ref: '#/definitions/user.GetUserResponse'
        type: array
    required:
    - count
    - data
    type: object
  Message:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  api_errors.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  user.CUser:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  user.CreateUserRequestData:
    properties:
      confirm_password:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    required:
    - confirm_password
    type: object
  user.GetUserResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: An API in Go using Gin framework
  title: Demo API
  version: "1.0"
paths:
  /api/v1/{id}:
    get:
      description: get user profile
      operationId: GetOneUser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Data-user_GetUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiError-string'
      security:
      - Bearer: []
      summary: CreateUser Profile
      tags:
      - UserManagementApi
  /api/v1/profile:
    get:
      description: get user profile
      operationId: GetUserProfile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Data-user_CUser'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiError-string'
      security:
      - Bearer: []
      summary: User Profile
      tags:
      - UserApi
  /api/v1/users:
    get:
      description: get all users
      operationId: GetAllUsers
      parameters:
      - in: query
        name: all
        type: boolean
      - in: query
        name: keyword
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DataCount-user_GetUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiError-string'
      security:
      - Bearer: []
      summary: All users
      tags:
      - UserManagementApi
    post:
      description: Create one user
      operationId: CreateUser
      parameters:
      - description: Enter JSON
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: CUser Created Successfully
          schema:
            $ref: '#/definitions/Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError-string'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ApiError-array_api_errors_ValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiError-string'
      security:
      - Bearer: []
      summary: Create CreateUser
      tags:
      - UserManagementApi
securityDefinitions:
  Bearer:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
