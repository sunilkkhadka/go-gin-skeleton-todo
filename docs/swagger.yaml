definitions:
  dtos.CreateUserRequestData:
    properties:
      confirm_password:
        type: string
      created_at:
        type: string
      deleted_at:
        allOf:
        - $ref: '#/definitions/gorm.DeletedAt'
        description: add soft delete in gorm
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    required:
    - confirm_password
    - email
    - full_name
    - gender
    - password
    - phone
    type: object
  dtos.GetUserResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        allOf:
        - $ref: '#/definitions/gorm.DeletedAt'
        description: add soft delete in gorm
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    required:
    - email
    - full_name
    - gender
    - password
    - phone
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  responses.Data:
    properties:
      data: {}
    type: object
  responses.DataCount:
    properties:
      count:
        type: integer
      data: {}
    type: object
  responses.Error:
    properties:
      error: {}
    type: object
  responses.Success:
    properties:
      msg:
        type: string
    type: object
host: localhost:8000/
info:
  contact: {}
  description: An API in Go using Gin framework
  title: Boilerplate API
  version: "1.0"
paths:
  /profile:
    get:
      description: Get one user by id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/responses.Data'
              - properties:
                  data:
                    $ref: '#/definitions/dtos.GetUserResponse'
                type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get one user by id
      tags:
      - User
  /users:
    get:
      description: Return all the User
      parameters:
      - description: "10"
        in: query
        name: page_size
        type: string
      - description: Page no
        in: query
        name: page
        type: string
      - description: search by name
        in: query
        name: keyword
        type: string
      - description: search by type
        in: query
        name: Keyword2
        type: string
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/responses.DataCount'
              - properties:
                  data:
                    items:
                      $ref: '#/definitions/dtos.GetUserResponse'
                    type: array
                type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get all User.
      tags:
      - User
    post:
      description: Create User
      parameters:
      - description: Enter JSON
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserRequestData'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Create User
      tags:
      - User
swagger: "2.0"
